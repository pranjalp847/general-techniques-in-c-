/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        
        if(!list1 and !list2) return list1;
        vector<int> v;
        ListNode* temp = list1;
        while(temp)
        {
            v.push_back(temp->val);
            temp = temp->next;
        }
        
        temp = list2;
        
        while(temp)
        {
            v.push_back(temp->val);
            temp = temp->next;
        }
        
        sort(v.begin(),v.end());
        int i=0;
        if(!list1)
        {
            temp=list2;
        }
        
        else
        {
            temp=list1;
        }
        
        while(temp->next)
        {
            temp->val = v[i];
            temp=temp->next;
            i++;
        }
        if(!list1)
        {
            return list2;
        }
        
        temp->next=list2;
        
        while(temp)
        {
            temp->val=v[i];
            temp=temp->next;
            i++;
        }
        
        return list1;
        
    }
};
